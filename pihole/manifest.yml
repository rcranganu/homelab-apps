apiVersion: v1
kind: Namespace
metadata: 
  name: pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-pvc
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
    app.kubernetes.io/instance: pihole
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - env:
            - name: TZ
              value: "Europe/London"
            - name: WEBPASSWORD
              value: Anisi@080423
            - name: FTLCONF_REPLY_ADDR4
              value: pihole
            - name: PIHOLE_DNS_
              value: 127.0.0.1#53
          image: pihole/pihole:latest
          imagePullPolicy: IfNotPresent
          name: pihole
          ports:
            - containerPort: 80
              name: pihole-http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: pihole-ssl
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole
      restartPolicy: Always
      volumes:
        - name: pihole
          persistentVolumeClaim:
            claimName: pihole-pvc 
---
apiVersion: v1
kind: Service
metadata:
  name: piholeui
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - protocol: TCP
      name: pihole
      port: 80
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pihole-certificate
  namespace: pihole
spec:
  secretName: tls-pihole-certificate
  issuerRef:
    name: cloudflare-cluster-issuer
    kind: ClusterIssuer
  dnsNames:
    - pihole.dev.k3s.rcrg.me
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: pihole-ingressroute
  namespace: pihole
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`pihole.dev.k3s.rcrg.me`)
    kind: Rule
    services:
    - name: piholeui
      port: 80
  tls:
    secretName: tls-pihole.certificate

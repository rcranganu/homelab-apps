apiVersion: v1
kind: Namespace
metadata: 
  name: pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-pvc
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
    app.kubernetes.io/instance: pihole
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      hostNetwork: true
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 1.1.1.1
      containers:
      - image: visibilityspots/cloudflared
        imagePullPolicy: IfNotPresent
        name: cloudflared
        env:
        - name: TUNNEL_METRICS
          value: 127.0.0.1:3000
      - env:
        - name: TZ
          value: "Europe/London"
        - name: WEBPASSWORD
          value: password # change this!
        - name: FTLCONF_REPLY_ADDR4
          value: pihole
        - name: PIHOLE_DNS_
          value: 127.0.0.1#5054 
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        name: pihole
        ports:
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        - containerPort: 67
          name: client-udp
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/pihole
          name: etc
        - mountPath: /etc/dnsmasq.d
          name: dnsmasq
        securityContext:
          capabilities:        
            add:
              - NET_ADMIN  
      restartPolicy: Always
      volumes:
        - name: etc
          persistentVolumeClaim:
            claimName: pihole-pvc
        - name: dnsmasq
          persistentVolumeClaim:
            claimName: pihole-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: piholeui
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: dns-udp
      port: 53
      protocol: UDP
      targetPort: 53
    - name: client-udp
      port: 67
      protocol: UDP
      targetPort: 67
    - name: pihole-http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: pihole-https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: dns
      port: 53
      protocol: TCP
      targetPort: 53
  loadBalancerIP: 10.10.4.7
  type: LoadBalancer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pihole-certificate
  namespace: pihole
spec:
  secretName: tls-pihole-certificate
  issuerRef:
    name: cloudflare-cluster-issuer
    kind: ClusterIssuer
  dnsNames:
    - pihole.dev.k3s.rcrg.me
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: default-headers
  namespace: pihole
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customRequestHeaders:
      X-Forwarded-Proto: https
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: pihole-ingressroute
  namespace: pihole
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`pihole.dev.k3s.rcrg.me`)
    kind: Rule
    services:
    - name: piholeui
      port: 80
    middlewares:
      - name: default-headers
  tls:
    secretName: tls-pihole.certificate

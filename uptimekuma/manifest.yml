apiVersion: v1
kind: Namespace
metadata:
  name: uptimekuma
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptimekuma
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptimekuma-pvc
  namespace: uptimekuma
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptimekuma
spec:
  selector:
    matchLabels:
      app: uptimekuma
  replicas: 1
  template:
    metadata:
      labels:
        app: uptimekuma
    spec:
      containers:
        - name: uptimekuma
          image: louislam/uptime-kuma:1.23.15
          resources:
            requests:
              memory: 256Mi
              cpu: 300m
          ports:
            - containerPort: 3001
          volumeMounts:
            - mountPath: /app/data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: uptimekuma-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: uptimekuma
spec:
  selector:
    app: uptimekuma
  ports:
    - protocol: TCP
      name: web
      port: 3001
  type: ClusterIP

# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: uptimekuma-certificate
#   namespace: uptimekuma
# spec:
#   secretName: uptimekuma-certificate-secret
#   issuerRef:
#     name: cloudflare-cluster-issuer
#     kind: ClusterIssuer
#   dnsNames:
#     - status.dev.k3s.rcrg.me

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: uptimekuma-ingressroute
  namespace: uptimekuma
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`status.dev.k3s.rcrg.me`)
    kind: Rule
    services:
    - name: uptimekuma
      port: 3001
  # tls:
  #   secretName: uptimekuma-certificate-secret
